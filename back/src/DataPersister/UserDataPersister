<?php
namespace App\DataPersister;

use ApiPlatform\Core\DataPersister\DataPersisterInterface;
use App\Entity\Userr;
use Doctrine\ORM\EntityManagerInterface;
use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;


class UserDataPersister implements DataPersisterInterface
{
    private $userPasswordEncoder;
    private $entityManager;
 
    public function __construct(EntityManagerInterface $entityManager, UserPasswordEncoderInterface $userPasswordEncoder)
    {
        $this->userPasswordEncoder = $userPasswordEncoder;
        $this->entityManager = $entityManager;
    }
 
    public function supports($data): bool
    {
        return $data instanceof Userr;
    }
 
    /**
     * @param Userr $data
     */
    public function persist($data)
    {
        if ($data->getplainPassword()) {
            $data->setPassword(
                $this->userPasswordEncoder->encodePassword($data, $data->getplainPassword())
            );
        }
 
        $this->entityManager->persist($data);
        $this->entityManager->flush();
    }
 
    public function remove($data)
    {
        $this->entityManager->remove($data);
        $this->entityManager->flush();
    }
}